void testAxTables()
{
    SqlSystem       sql = new SqlSystem();

    CustTrans       trans;
    CustTransOpen   open;
    RefRecId        trans_recId;
    RefRecId        open_recId;

    CustTrans       trans_res;
    CustTransOpen   open_res;

    SysResultSet    resultSet;
    int             lineCount;
    int             fieldCount;

    SysDictTable    dt = SysDictTable::newTableId(trans.TableId);
    int             i;
    SysDictField    df;
;
    trans.clear(); // проявляем dataAreaId, соответствующее текущей компании. даже если ct находится в виртуальной компании

    resultSet = SysResultSet::executeQuery(strfmt(@"
        select top 10
            o.AMOUNTMST as o_AMOUNTMST,
            o.AMOUNTCUR as o_AMOUNTCUR,
            o.DUEDATE as o_DUEDATE,
            o.RECID as o_RECID,
            t.*
        from CUSTTRANS as t
        join CUSTTRANSOPEN as o
            on (t.DATAAREAID = o.DATAAREAID and t.RECID = o.REFRECID)
        where t.DATAAREAID = %1
        ", sql.sqlLiteral(trans.dataAreaId)));

    this.assertNotNull(resultSet, "resultSet не создан");

    while( resultSet.next() )
    {
        ++lineCount;

        open_recId = resultSet.value("o_recId");
        this.assertNotEqual(0, open_recId, strfmt("%1: не прочитан open.recid", lineCount));

        open = CustTransOpen::find(open_recId);
        this.assertEquals(open_recId, open.RecId, strfmt("%1: не найден open с recID %1", lineCount, open_recId));

        this.assertEquals(3, resultSet.copyTo(open_res, "o_%1"), strfmt("%1: copyTo скопировал не все поля, указанные в запросе", lineCount));
        this.assertEquals(open.AmountCur, open_res.AmountCur, strfmt("%1: не совпадают AmountCur в open и resultSet после copyTo", lineCount));
        this.assertEquals(open.AmountMST, open_res.AmountMST, strfmt("%1: не совпадают AmountMST в open и resultSet после copyTo", lineCount));
        this.assertEquals(open.DueDate, open_res.DueDate,     strfmt("%1: не совпадают DueDate в open и resultSet после copyTo", lineCount));

        //////////////////////////////
        trans_recId = resultSet.value("recId");
        this.assertNotEqual(0, trans_recId, strfmt("%1: не прочитан trans.recid", lineCount));

        trans = CustTrans::find(trans_recId);
        this.assertEquals(trans_recId, trans.RecId, strfmt("%1: не найден trans с recID %2", lineCount, trans_recId));

        resultSet.copyTo(trans_res);

        for(i=1; i<=dt.columnCnt(); ++i )
        {
            df = new SysDictField(dt.id(), dt.column2id(i));
            if( df && df.saveContents() && df.isSql() && !df.isSystem() )
            {
                if( df.name() == "MCRPAYMORDERID" )
                    continue; //TODO почему resultSet возвращает " " вместо пустой строки?

                this.assertEquals(trans.(df.extendedFieldId()), trans_res.(df.extendedFieldId()), strfmt("%1: не совпадают trans.%2 и resultSet после copyTo", lineCount, df.name()));
            }
        }
        //this.assertTrue(trans.equal(trans_res), strfmt("%1: не совпадают данные в trans и resultSet после copyTo", lineCount));
    }

    this.assertNotEqual(0, lineCount, "SQL-запрос возвратил пустой resultSet. Возможно, в этой компании нет открытых проводок по клиентам. Для полноценного тестирования класса в компании должно быть по крайней мере 2 открытые проводки");
    this.assertNotEqual(1, lineCount, "SQL-запрос возвратил одну строку. Для полноценного тестирования класса в компании должно быть по крайней мере 2 открытые проводки");
}